name: partbuild-android

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  android:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      VERSION: 135.0.7049.38
      SRCDIR: chromium-src
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Reclaiming disk space on / by disabling swap partition
        run: |
          sudo swapoff -av
          sudo rm -f /swapfile

      - name: "remove not needed items"
        run: |
          sudo rm -rf /usr/local/.ghcup \
            /usr/share/dotnet \
            /usr/share/swift \
            /usr/local/share/powershell \
            /usr/local/lib/android \
            /opt/ghc \
            /opt/hostedtoolcache/CodeQL \
            /imagegeneration \
            "$AGENT_TOOLSDIRECTORY"
          sudo docker image prune --all --force
          sudo docker builder prune -a

      - name: Setup src dir
        run: |
          echo "Tag name: ${{ github.ref_name }}"
          echo "Version name: ${{ env.VERSION }}"
          mkdir -p $SRCDIR && cd $SRCDIR
          cat > .gclient <<EOF
          solutions = [
            {
              "name": "src",
              "url": "https://chromium.googlesource.com/chromium/src.git@$VERSION",
              "managed": False,
              "custom_deps": {},
              "custom_vars": {},
            },
          ]
          target_os = ["android"]
          EOF

      - name: Clone depot_tools
        shell: bash
        run: |
          cd $SRCDIR
          cat .gclient
          echo "Clone depot_tools..."
          git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools

      - name: Adding depot_tools to path
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: echo "::add-path::$GITHUB_WORKSPACE/chromium-src/depot_tools"

      - name: Clone source and do gclient sync
        shell: bash
        run: |
          cd $SRCDIR
          echo "PATH: $PATH"
          echo "gclient sync chromium-$VERSION..." 
          gclient sync --no-history --nohooks
          du -sh ../$SRCDIR
          gclient runhooks
          src/build/util/lastchange.py -o src/build/util/LASTCHANGE
          src/build/util/lastchange.py -m GPU_LISTS_VERSION --revision-id-only --header src/gpu/config/gpu_lists_version.h
          src/build/util/lastchange.py -m SKIA_COMMIT_HASH -s src/third_party/skia --header src/skia/ext/skia_commit_hash.h
          src/build/util/lastchange.py -s src/third_party/dawn --revision src/gpu/webgpu/DAWN_VERSION
          cd src && rm -rf .git
          cd .. && du -sh ../$SRCDIR
          wget https://raw.githubusercontent.com/COD3HUNT3R/gollum/refs/heads/main/export_tarball.py
          chmod +x export_tarball.py
          ./export_tarball.py --version --xz --remove-nonessential-files chromium-$VERSION --progress --src-dir src/
          ls -lsh
          pwd

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-src-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src/*.tar.xz

  build1:
    needs: android
    runs-on: ubuntu-latest
    env:
      VERSION: 135.0.7049.38
      SRCDIR: chromium-src
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Reclaiming disk space on / by disabling swap partition
        run: |
          sudo swapoff -av
          sudo rm -f /swapfile

      - name: "remove not needed items"
        run: |
          sudo rm -rf /usr/local/.ghcup \
            /usr/share/dotnet \
            /usr/share/swift \
            /usr/local/share/powershell \
            /usr/local/lib/android \
            /opt/ghc \
            /opt/hostedtoolcache/CodeQL \
            /imagegeneration \
            "$AGENT_TOOLSDIRECTORY"
          sudo docker image prune --all --force
          sudo docker builder prune -a

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: android-src-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src

      - name: Clone depot_tools
        shell: bash
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: |
          cd $SRCDIR
          echo "Clone depot_tools..."
          git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools
          echo "::add-path::$GITHUB_WORKSPACE/chromium-src/depot_tools"
          sudo apt install -y ninja-build gperf

      - name: Extract tar
        shell: bash
        run: |
          cd $SRCDIR && ls -lsh
          tar -xf chromium-$VERSION.tar.xz
          ls -lsh
          rm -f chromium-$VERSION.tar.xz
          cd chromium-$VERSION
          pwd && ls -lsh
          sudo build/install-build-deps.sh
          mkdir -p out/release && cd out/release
          wget -O args.gn https://raw.githubusercontent.com/COD3HUNT3R/gollum/refs/heads/main/android-args.gn
          cd ../.. && pwd && ls -lsh
          gn gen out/release

      - name: Build content/public/browser
        shell: bash
        continue-on-error: true
        run: |
          cd $SRCDIR/chromium-$VERSION
          timeout 5h ninja -j 4 -C out/release content/public/browser

      - name: Compress artifacts
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ZSTD_CLEVEL=12 tar -I zstd -cvpf /home/runner/work/gollum/gollum/chromium-src/out.tar.zst ./out

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: chromium-out
          path: /home/runner/work/gollum/gollum/chromium-src/out.tar.zst

  build2:
      needs: build1
      runs-on: ubuntu-latest
      env:
        VERSION: 135.0.7049.38
        SRCDIR: chromium-src
      steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Reclaiming disk space on / by disabling swap partition
        run: |
          sudo swapoff -av
          sudo rm -f /swapfile

      - name: "remove not needed items"
        run: |
          sudo rm -rf /usr/local/.ghcup \
            /usr/share/dotnet \
            /usr/share/swift \
            /usr/local/share/powershell \
            /usr/local/lib/android \
            /opt/ghc \
            /opt/hostedtoolcache/CodeQL \
            /imagegeneration \
            "$AGENT_TOOLSDIRECTORY"
          sudo docker image prune --all --force
          sudo docker builder prune -a

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: android-src-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: chromium-out
          path: /home/runner/work/gollum/gollum/chromium-src

      - name: Clone depot_tools
        shell: bash
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: |
          cd $SRCDIR
          echo "Clone depot_tools..."
          git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools
          echo "::add-path::$GITHUB_WORKSPACE/chromium-src/depot_tools"
          sudo apt install -y ninja-build gperf

      - name: Extract tar
        shell: bash
        run: |
          cd $SRCDIR && ls -lsh
          tar -xf chromium-$VERSION.tar.xz
          tar -xf out.tar.zst
          ls -lsh
          rm -f chromium-$VERSION.tar.xz out.tar.zst
          mv out chromium-$VERSION && cd chromium-$VERSION
          pwd && ls -lsh

      - name: Build content/public/browser
        shell: bash
        continue-on-error: true
        run: |
          cd $SRCDIR/chromium-$VERSION
          timeout 3h ninja -j 4 -C out/release content/public/browser

      - name: Build content/public/common
        shell: bash
        continue-on-error: true
        run: |
          cd $SRCDIR/chromium-$VERSION
          timeout 3h ninja -j 4 -C out/release content/public/common

      - name: Build chrome/gpu
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ninja -j 4 -C out/release chrome/gpu

      - name: Build chrome_java
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ninja -j 4 -C out/release chrome_java

      - name: Build chrome/common
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ninja -j 4 -C out/release chrome/common

      - name: Compress artifacts
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ZSTD_CLEVEL=12 tar -I zstd -cvpf /home/runner/work/gollum/gollum/chromium-src/out.tar.zst ./out

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: chromium-out
          path: /home/runner/work/gollum/gollum/chromium-src/out.tar.zst
          overwrite: true

  build3:
      needs: build2
      runs-on: ubuntu-latest
      env:
        VERSION: 135.0.7049.38
        SRCDIR: chromium-src
      steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Reclaiming disk space on / by disabling swap partition
        run: |
          sudo swapoff -av
          sudo rm -f /swapfile

      - name: "remove not needed items"
        run: |
          sudo rm -rf /usr/local/.ghcup \
            /usr/share/dotnet \
            /usr/share/swift \
            /usr/local/share/powershell \
            /usr/local/lib/android \
            /opt/ghc \
            /opt/hostedtoolcache/CodeQL \
            /imagegeneration \
            "$AGENT_TOOLSDIRECTORY"
          sudo docker image prune --all --force
          sudo docker builder prune -a

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: android-src-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: chromium-out
          path: /home/runner/work/gollum/gollum/chromium-src

      - name: Clone depot_tools
        shell: bash
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: |
          cd $SRCDIR
          echo "Clone depot_tools..."
          git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools
          echo "::add-path::$GITHUB_WORKSPACE/chromium-src/depot_tools"
          sudo apt install -y ninja-build gperf

      - name: Extract tar
        shell: bash
        run: |
          cd $SRCDIR && ls -lsh
          tar -xf chromium-$VERSION.tar.xz
          tar -xf out.tar.zst
          ls -lsh
          rm -f chromium-$VERSION.tar.xz out.tar.zst
          mv out chromium-$VERSION && cd chromium-$VERSION
          pwd && ls -lsh

      - name: Build chrome/browser/ui
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ninja -j 4 -C out/release chrome/browser/ui

      - name: Compress artifacts
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ZSTD_CLEVEL=12 tar -I zstd -cvpf /home/runner/work/gollum/gollum/chromium-src/out.tar.zst ./out

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: chromium-out
          path: /home/runner/work/gollum/gollum/chromium-src/out.tar.zst
          overwrite: true

  build4:
      needs: build3
      runs-on: ubuntu-latest
      env:
        VERSION: 135.0.7049.38
        SRCDIR: chromium-src
      steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Reclaiming disk space on / by disabling swap partition
        run: |
          sudo swapoff -av
          sudo rm -f /swapfile

      - name: "remove not needed items"
        run: |
          sudo rm -rf /usr/local/.ghcup \
            /usr/share/dotnet \
            /usr/share/swift \
            /usr/local/share/powershell \
            /usr/local/lib/android \
            /opt/ghc \
            /opt/hostedtoolcache/CodeQL \
            /imagegeneration \
            "$AGENT_TOOLSDIRECTORY"
          sudo docker image prune --all --force
          sudo docker builder prune -a

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: android-src-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: chromium-out
          path: /home/runner/work/gollum/gollum/chromium-src

      - name: Clone depot_tools
        shell: bash
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: |
          cd $SRCDIR
          echo "Clone depot_tools..."
          git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools
          echo "::add-path::$GITHUB_WORKSPACE/chromium-src/depot_tools"
          sudo apt install -y ninja-build gperf

      - name: Extract tar
        shell: bash
        run: |
          cd $SRCDIR && ls -lsh
          tar -xf chromium-$VERSION.tar.xz
          tar -xf out.tar.zst
          ls -lsh
          rm -f chromium-$VERSION.tar.xz out.tar.zst
          mv out chromium-$VERSION && cd chromium-$VERSION
          pwd && ls -lsh

      - name: Build chrome/browser
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ninja -j 4 -C out/release chrome/browser

      - name: Compress artifacts
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ZSTD_CLEVEL=12 tar -I zstd -cvpf /home/runner/work/gollum/gollum/chromium-src/out.tar.zst ./out

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: chromium-out
          path: /home/runner/work/gollum/gollum/chromium-src/out.tar.zst
          overwrite: true

  build5:
      needs: build4
      runs-on: ubuntu-latest
      env:
        VERSION: 135.0.7049.38
        SRCDIR: chromium-src
      steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Reclaiming disk space on / by disabling swap partition
        run: |
          sudo swapoff -av
          sudo rm -f /swapfile

      - name: "remove not needed items"
        run: |
          sudo rm -rf /usr/local/.ghcup \
            /usr/share/dotnet \
            /usr/share/swift \
            /usr/local/share/powershell \
            /usr/local/lib/android \
            /opt/ghc \
            /opt/hostedtoolcache/CodeQL \
            /imagegeneration \
            "$AGENT_TOOLSDIRECTORY"
          sudo docker image prune --all --force
          sudo docker builder prune -a

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: android-src-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: chromium-out
          path: /home/runner/work/gollum/gollum/chromium-src

      - name: Clone depot_tools
        shell: bash
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: |
          cd $SRCDIR
          echo "Clone depot_tools..."
          git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools
          echo "::add-path::$GITHUB_WORKSPACE/chromium-src/depot_tools"
          sudo apt install -y ninja-build gperf

      - name: Extract tar
        shell: bash
        run: |
          cd $SRCDIR && ls -lsh
          tar -xf chromium-$VERSION.tar.xz
          tar -xf out.tar.zst
          ls -lsh
          rm -f chromium-$VERSION.tar.xz out.tar.zst
          mv out chromium-$VERSION && cd chromium-$VERSION
          pwd && ls -lsh

      - name: Build apk
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ninja -j 4 -C out/release chrome_public_apk
          ls -lsh out/release/apks

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: apks
          path: /home/runner/work/gollum/gollum/chromium-src/chromium-$VERSION/out/release/apks
