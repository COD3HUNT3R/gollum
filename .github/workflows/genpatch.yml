# This is a basic workflow to help you get started with Actions

name: genpatch

# Controls when the workflow will run
on:
  push:
    # Pattern matched against refs/tags
    tags:        
      - '*'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  linux:
    runs-on: ubuntu-latest
    env:
      VMAJOR: 135
      VERSION: 135.0.7049.52
      SRCDIR: chromium-src
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Reclaiming disk space on / by disabling swap partition
        run: |
          sudo swapoff -av
          sudo rm -f /swapfile

      - name: "remove not needed items"
        run: |
          sudo rm -rf /usr/local/.ghcup \
            /usr/share/dotnet \
            /usr/share/swift \
            /usr/local/share/powershell \
            /usr/local/lib/android \
            /opt/ghc \
            /opt/hostedtoolcache/CodeQL \
            /imagegeneration \
            "$AGENT_TOOLSDIRECTORY"
          sudo docker image prune --all --force
          sudo docker builder prune -a

      - name: Setup src dir
        run: |
          mkdir -p $SRCDIR && cd $SRCDIR
          cat > .gclient <<EOF
          solutions = [
            {
              "name": "src",
              "url": "https://chromium.googlesource.com/chromium/src.git@$VERSION",
              "managed": False,
              "custom_deps": {},
              "custom_vars": {},
            },
          ]
          target_os = ["linux"]
          EOF

      - name: Clone depot_tools
        shell: bash
        run: |
          cd $SRCDIR
          cat .gclient
          echo "Clone depot_tools..."
          git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools

      - name: Adding depot_tools to path
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: echo "::add-path::$GITHUB_WORKSPACE/chromium-src/depot_tools"

      - name: Clone source and do gclient sync
        shell: bash
        run: |
          cd $SRCDIR
          echo "PATH: $PATH"
          echo "gclient sync chromium-$VERSION..." 
          gclient sync --no-history --nohooks
          du -sh ../$SRCDIR
          gclient runhooks
          src/build/util/lastchange.py -o src/build/util/LASTCHANGE
          src/build/util/lastchange.py -m GPU_LISTS_VERSION --revision-id-only --header src/gpu/config/gpu_lists_version.h
          src/build/util/lastchange.py -m SKIA_COMMIT_HASH -s src/third_party/skia --header src/skia/ext/skia_commit_hash.h
          src/build/util/lastchange.py -s src/third_party/dawn --revision src/gpu/webgpu/DAWN_VERSION
          cd src && rm -rf .git
          cd .. && du -sh ../$SRCDIR
          wget https://raw.githubusercontent.com/COD3HUNT3R/gollum/refs/heads/main/export_tarball.py
          chmod +x export_tarball.py
          ./export_tarball.py --version --xz --remove-nonessential-files chromium-$VERSION --progress --src-dir src/
          ls -lsh && pwd

      - name: Generate patches
        shell: bash
        continue-on-error: true
        run: |
          cd $SRCDIR
          mv *.tar.xz .. && cd ..
          rm -rf $SRCDIR
          ls -lsh && pwd
          tar -xf chromium-$VERSION.tar.xz
          mv chromium-$VERSION a
          tar -xf chromium-$VERSION.tar.xz
          mv chromium-$VERSION b
          rm -f chromium-$VERSION.tar.xz
          cd b
          find . -type f -a \( -name "*.grd" -o -name "*.grdp" -o -name "*.xtb" -o -name "*.xml" \) -a -exec sed -i -e "s/Chromium/Baraqah/g" {} +
          cd ..
          ls -lsh && pwd
          diff -urN a b > baraqah$VMAJOR-$VERSION-branding.patch
          ls -lsh && pwd

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-patch-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/*.patch


  windows:
    runs-on: windows-latest
    env:
      VMAJOR: 135
      VERSION: 135.0.7049.42
      SRCDIR: chromium-src
      DEPOT_TOOLS_WIN_TOOLCHAIN: 0
      MSYS: winsymlinks:native
    steps:
      - name: Setup src dir
        run: |
          mkdir -p ${{ env.SRCDIR }} && cd ${{ env.SRCDIR }}
          curl.exe -o .gclient https://raw.githubusercontent.com/COD3HUNT3R/gollum/refs/heads/main/.gclient-win
          ls

      - name: Clone depot_tools
        shell: bash
        run: |
          cd $SRCDIR
          cat .gclient
          git config --global depot-tools.allowGlobalGitConfig true
          echo "Clone depot_tools..."
          git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools

      - name: Adding depot_tools to path
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: echo "::add-path::$env:GITHUB_WORKSPACE/chromium-src/depot_tools"

      - name: Clone source and do gclient sync
        shell: bash
        run: |
          cd ${{ env.SRCDIR }}
          echo "PATH: $PATH"
          echo "gclient sync chromium-$VERSION..." 
          gclient sync --no-history --nohooks
          du -sh ../${{ env.SRCDIR }}
          gclient runhooks
          src/build/util/lastchange.py -o src/build/util/LASTCHANGE
          src/build/util/lastchange.py -m GPU_LISTS_VERSION --revision-id-only --header src/gpu/config/gpu_lists_version.h
          src/build/util/lastchange.py -m SKIA_COMMIT_HASH -s src/third_party/skia --header src/skia/ext/skia_commit_hash.h
          src/build/util/lastchange.py -s src/third_party/dawn --revision src/gpu/webgpu/DAWN_VERSION
          cd src && rm -rf .git
          cd .. && du -sh ../${{ env.SRCDIR }}
          curl -o export_tarball.py https://raw.githubusercontent.com/COD3HUNT3R/gollum/refs/heads/main/export_tarball.py
          chmod +x export_tarball.py
          ./export_tarball.py --version --xz --remove-nonessential-files chromium-$VERSION --progress --src-dir src/
          ls -lsh && pwd

      - name: Generate patches
        shell: bash
        continue-on-error: true
        run: |
          cd ${{ env.SRCDIR }}
          mv *.tar.xz .. && cd ..
          rm -rf ${{ env.SRCDIR }}
          ls -lsh && pwd
          tar -xf chromium-$VERSION.tar.xz
          mv chromium-$VERSION a
          tar -xf chromium-$VERSION.tar.xz
          mv chromium-$VERSION b
          rm -f chromium-$VERSION.tar.xz
          cd b
          find . -type f -a \( -name "*.grd" -o -name "*.grdp" -o -name "*.xtb" -o -name "*.xml" \) -a -exec sed -i -e "s/Chromium/Baraqah/g" {} +
          cd ..
          ls -lsh && pwd
          diff -urN a b > baraqah$VMAJOR-$VERSION-branding.patch
          ls -lsh && pwd

      - name: Upload windows patch
        uses: actions/upload-artifact@v4
        with:
          name: windows-patch-${{ env.VERSION }}
          path: ${{ github.workspace }}\*.patch


  android:
    runs-on: ubuntu-latest
    env:
      VMAJOR: 135
      VERSION: 135.0.7049.38
      SRCDIR: chromium-src
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Reclaiming disk space on / by disabling swap partition
        run: |
          sudo swapoff -av
          sudo rm -f /swapfile

      - name: "remove not needed items"
        run: |
          sudo rm -rf /usr/local/.ghcup \
            /usr/share/dotnet \
            /usr/share/swift \
            /usr/local/share/powershell \
            /usr/local/lib/android \
            /opt/ghc \
            /opt/hostedtoolcache/CodeQL \
            /imagegeneration \
            "$AGENT_TOOLSDIRECTORY"
          sudo docker image prune --all --force
          sudo docker builder prune -a

      - name: Setup src dir
        run: |
          mkdir -p $SRCDIR && cd $SRCDIR
          cat > .gclient <<EOF
          solutions = [
            {
              "name": "src",
              "url": "https://chromium.googlesource.com/chromium/src.git@$VERSION",
              "managed": False,
              "custom_deps": {},
              "custom_vars": {},
            },
          ]
          target_os = ["android"]
          EOF

      - name: Clone depot_tools
        shell: bash
        run: |
          cd $SRCDIR
          cat .gclient
          echo "Clone depot_tools..."
          git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools

      - name: Adding depot_tools to path
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: echo "::add-path::$GITHUB_WORKSPACE/chromium-src/depot_tools"

      - name: Clone source and do gclient sync
        shell: bash
        run: |
          cd $SRCDIR
          echo "PATH: $PATH"
          echo "gclient sync chromium-$VERSION..." 
          gclient sync --no-history --nohooks
          du -sh ../$SRCDIR
          gclient runhooks
          src/build/util/lastchange.py -o src/build/util/LASTCHANGE
          src/build/util/lastchange.py -m GPU_LISTS_VERSION --revision-id-only --header src/gpu/config/gpu_lists_version.h
          src/build/util/lastchange.py -m SKIA_COMMIT_HASH -s src/third_party/skia --header src/skia/ext/skia_commit_hash.h
          src/build/util/lastchange.py -s src/third_party/dawn --revision src/gpu/webgpu/DAWN_VERSION
          cd src && rm -rf .git
          cd .. && du -sh ../$SRCDIR
          wget https://raw.githubusercontent.com/COD3HUNT3R/gollum/refs/heads/main/export_tarball.py
          chmod +x export_tarball.py
          ./export_tarball.py --version --xz --remove-nonessential-files chromium-$VERSION --progress --src-dir src/
          ls -lsh && pwd

      - name: Generate patches
        shell: bash
        continue-on-error: true
        run: |
          cd $SRCDIR
          mv *.tar.xz .. && cd ..
          rm -rf $SRCDIR
          ls -lsh && pwd
          tar -xf chromium-$VERSION.tar.xz
          mv chromium-$VERSION a
          tar -xf chromium-$VERSION.tar.xz
          mv chromium-$VERSION b
          rm -f chromium-$VERSION.tar.xz
          cd b
          find . -type f -a \( -name "*.grd" -o -name "*.grdp" -o -name "*.xtb" \) -a -exec sed -i -e "s/Chromium/Baraqah/g" {} +
          find . -type f -a \( -name "*.grd" -o -name "*.grdp" -o -name "*.xtb" \) -a -exec sed -i -e "s/Chrome/Baraqah/g" {} +
          cd ..
          diff -urN a b > baraqah$VMAJOR-$VERSION-branding.patch
          ls -lsh && pwd

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-patch-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/*.patch
