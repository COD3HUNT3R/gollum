name: partbuild-linux

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  linux:
    runs-on: ubuntu-latest
    env:
      VMAJOR: 135
      VERSION: 135.0.7049.52
      SRCDIR: chromium-src
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Reclaiming disk space on / by disabling swap partition
        run: |
          sudo swapoff -av
          sudo rm -f /swapfile

      - name: "remove not needed items"
        run: |
          sudo rm -rf /usr/local/.ghcup \
            /usr/share/dotnet \
            /usr/share/swift \
            /usr/local/share/powershell \
            /usr/local/lib/android \
            /opt/ghc \
            /opt/hostedtoolcache/CodeQL \
            /imagegeneration \
            "$AGENT_TOOLSDIRECTORY"
          sudo docker image prune --all --force
          sudo docker builder prune -a

      - name: Setup src dir
        run: |
          mkdir -p $SRCDIR && cd $SRCDIR
          cat > .gclient <<EOF
          solutions = [
            {
              "name": "src",
              "url": "https://chromium.googlesource.com/chromium/src.git@$VERSION",
              "managed": False,
              "custom_deps": {},
              "custom_vars": {},
            },
          ]
          target_os = ["linux"]
          EOF

      - name: Clone depot_tools
        shell: bash
        run: |
          cd $SRCDIR
          cat .gclient
          echo "Clone depot_tools..."
          git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools

      - name: Adding depot_tools to path
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: echo "::add-path::$GITHUB_WORKSPACE/chromium-src/depot_tools"

      - name: Clone source and do gclient sync
        shell: bash
        run: |
          cd $SRCDIR
          echo "PATH: $PATH"
          echo "gclient sync chromium-$VERSION..." 
          gclient sync --no-history --nohooks
          du -sh ../$SRCDIR
          gclient runhooks
          src/build/util/lastchange.py -o src/build/util/LASTCHANGE
          src/build/util/lastchange.py -m GPU_LISTS_VERSION --revision-id-only --header src/gpu/config/gpu_lists_version.h
          src/build/util/lastchange.py -m SKIA_COMMIT_HASH -s src/third_party/skia --header src/skia/ext/skia_commit_hash.h
          src/build/util/lastchange.py -s src/third_party/dawn --revision src/gpu/webgpu/DAWN_VERSION
          cd src && rm -rf .git
          cd .. && du -sh ../$SRCDIR
          wget https://raw.githubusercontent.com/COD3HUNT3R/gollum/refs/heads/main/export_tarball.py
          chmod +x export_tarball.py
          ./export_tarball.py --version --xz --remove-nonessential-files chromium-$VERSION --progress --src-dir src/
          ls -lsh && pwd

      - name: Upload source tarball
        uses: actions/upload-artifact@v4
        with:
          name: linux-src-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src/*.tar.xz

      - name: Generate patches
        shell: bash
        continue-on-error: true
        run: |
          cd $SRCDIR
          mv *.tar.xz .. && cd ..
          rm -rf $SRCDIR
          ls -lsh && pwd
          tar -xf chromium-$VERSION.tar.xz
          mv chromium-$VERSION a
          tar -xf chromium-$VERSION.tar.xz
          mv chromium-$VERSION b
          rm -f chromium-$VERSION.tar.xz
          cd b
          find . -type f -a \( -name "*.grd" -o -name "*.grdp" -o -name "*.xtb" -o -name "*.xml" \) -a -exec sed -i -e "s/Chromium/Baraqah/g" {} +
          cd ..
          ls -lsh && pwd
          diff -urN a b > baraqah$VMAJOR-$VERSION-branding.patch
          ls -lsh && pwd

      - name: Upload patches
        uses: actions/upload-artifact@v4
        with:
          name: linux-patch-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/*.patch

  linuxbuild1:
    needs: linux
    runs-on: ubuntu-latest
    env:
      VMAJOR: 135
      VERSION: 135.0.7049.52
      SRCDIR: chromium-src
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Reclaiming disk space on / by disabling swap partition
        run: |
          sudo swapoff -av
          sudo rm -f /swapfile

      - name: "remove not needed items"
        run: |
          sudo rm -rf /usr/local/.ghcup \
            /usr/share/dotnet \
            /usr/share/swift \
            /usr/local/share/powershell \
            /usr/local/lib/android \
            /opt/ghc \
            /opt/hostedtoolcache/CodeQL \
            /imagegeneration \
            "$AGENT_TOOLSDIRECTORY"
          sudo docker image prune --all --force
          sudo docker builder prune -a

      - name: Download source tarball
        uses: actions/download-artifact@v4
        with:
          name: linux-src-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src

      - name: Download versioned branding patches
        uses: actions/download-artifact@v4
        with:
          name: linux-patch-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src

      - uses: actions/checkout@v4
        with:
          repository: 'COD3HUNT3R/desktop'
          path: 'chromium-src/desktop'
          token: ${{ secrets.PAT }}

      - name: Clone depot_tools
        shell: bash
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: |
          cd $SRCDIR && ls -lsh
          echo "Clone depot_tools..."
          git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools
          echo "::add-path::$GITHUB_WORKSPACE/chromium-src/depot_tools"
          sudo apt install -y ninja-build gperf

      - name: Extract tar
        shell: bash
        run: |
          cd $SRCDIR && ls -lsh linux
          tar -xf chromium-$VERSION.tar.xz
          ls -lsh
          rm -f chromium-$VERSION.tar.xz
          cd chromium-$VERSION
          patch -p1 < ../baraqah$VMAJOR-$VERSION-branding.patch
          rm -rf chrome/app/theme/chromium chrome/app/theme/default_100_percent chrome/app/theme/default_200_percent
          cp -r ../linux/chrome .
          pwd && ls -lsh chrome/app/theme/chromium
          sudo build/install-build-deps.sh
          mkdir -p out/release && cd out/release
          wget -O args.gn https://raw.githubusercontent.com/COD3HUNT3R/gollum/refs/heads/main/linux-args.gn
          cd ../.. && pwd && ls -lsh
          gn gen out/release

      - name: Build base
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ninja -j 4 -C out/release base

      - name: Build content/public/common
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ninja -j 4 -C out/release content/public/common

      - name: Compress artifacts
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ZSTD_CLEVEL=12 tar -I zstd -cvpf /home/runner/work/gollum/gollum/chromium-src/out.tar.zst ./out

      - name: Upload out directory
        uses: actions/upload-artifact@v4
        with:
          name: chromium-out-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src/out.tar.zst

  linuxbuild2:
      needs: linuxbuild1
      runs-on: ubuntu-latest
      env:
        VMAJOR: 135
        VERSION: 135.0.7049.52
        SRCDIR: chromium-src
      steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Reclaiming disk space on / by disabling swap partition
        run: |
          sudo swapoff -av
          sudo rm -f /swapfile

      - name: "remove not needed items"
        run: |
          sudo rm -rf /usr/local/.ghcup \
            /usr/share/dotnet \
            /usr/share/swift \
            /usr/local/share/powershell \
            /usr/local/lib/android \
            /opt/ghc \
            /opt/hostedtoolcache/CodeQL \
            /imagegeneration \
            "$AGENT_TOOLSDIRECTORY"
          sudo docker image prune --all --force
          sudo docker builder prune -a

      - name: Download source tarball
        uses: actions/download-artifact@v4
        with:
          name: linux-src-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src

      - name: Download out directory
        uses: actions/download-artifact@v4
        with:
          name: chromium-out-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src

      - name: Download versioned branding patches
        uses: actions/download-artifact@v4
        with:
          name: linux-patch-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src

      - uses: actions/checkout@v4
        with:
          repository: 'COD3HUNT3R/desktop'
          path: 'chromium-src/desktop'
          token: ${{ secrets.PAT }}

      - name: Clone depot_tools
        shell: bash
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: |
          cd $SRCDIR
          echo "Clone depot_tools..."
          git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools
          echo "::add-path::$GITHUB_WORKSPACE/chromium-src/depot_tools"
          sudo apt install -y ninja-build gperf

      - name: Extract tar
        shell: bash
        run: |
          cd $SRCDIR && ls -lsh
          tar -xf chromium-$VERSION.tar.xz
          tar -xf out.tar.zst
          ls -lsh
          rm -f chromium-$VERSION.tar.xz out.tar.zst
          mv out chromium-$VERSION && cd chromium-$VERSION
          patch -p1 < ../baraqah$VMAJOR-$VERSION-branding.patch
          rm -rf chrome/app/theme/chromium chrome/app/theme/default_100_percent chrome/app/theme/default_200_percent
          cp -r ../linux/chrome .
          pwd && ls -lsh chrome/app/theme/chromium
          sudo build/install-build-deps.sh
          pwd && ls -lsh

      - name: Build content/public/browser
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ninja -j 4 -C out/release content/public/browser

      - name: Build chrome/gpu
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ninja -j 4 -C out/release chrome/gpu

      - name: Build chrome/common
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ninja -j 4 -C out/release chrome/common

      - name: Compress artifacts
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ZSTD_CLEVEL=12 tar -I zstd -cvpf /home/runner/work/gollum/gollum/chromium-src/out.tar.zst ./out

      - name: Upload out directory
        uses: actions/upload-artifact@v4
        with:
          name: chromium-out-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src/out.tar.zst
          overwrite: true

  linuxbuild3:
      needs: linuxbuild2
      runs-on: ubuntu-latest
      env:
        VMAJOR: 135
        VERSION: 135.0.7049.52
        SRCDIR: chromium-src
      steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Reclaiming disk space on / by disabling swap partition
        run: |
          sudo swapoff -av
          sudo rm -f /swapfile

      - name: "remove not needed items"
        run: |
          sudo rm -rf /usr/local/.ghcup \
            /usr/share/dotnet \
            /usr/share/swift \
            /usr/local/share/powershell \
            /usr/local/lib/android \
            /opt/ghc \
            /opt/hostedtoolcache/CodeQL \
            /imagegeneration \
            "$AGENT_TOOLSDIRECTORY"
          sudo docker image prune --all --force
          sudo docker builder prune -a

      - name: Download source tarball
        uses: actions/download-artifact@v4
        with:
          name: linux-src-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src

      - name: Download out directory
        uses: actions/download-artifact@v4
        with:
          name: chromium-out-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src

      - name: Download versioned branding patches
        uses: actions/download-artifact@v4
        with:
          name: linux-patch-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src

      - uses: actions/checkout@v4
        with:
          repository: 'COD3HUNT3R/desktop'
          path: 'chromium-src/desktop'
          token: ${{ secrets.PAT }}

      - name: Clone depot_tools
        shell: bash
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: |
          cd $SRCDIR
          echo "Clone depot_tools..."
          git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools
          echo "::add-path::$GITHUB_WORKSPACE/chromium-src/depot_tools"
          sudo apt install -y ninja-build gperf

      - name: Extract tar
        shell: bash
        run: |
          cd $SRCDIR && ls -lsh
          tar -xf chromium-$VERSION.tar.xz
          tar -xf out.tar.zst
          ls -lsh
          rm -f chromium-$VERSION.tar.xz out.tar.zst
          mv out chromium-$VERSION && cd chromium-$VERSION
          patch -p1 < ../baraqah$VMAJOR-$VERSION-branding.patch
          rm -rf chrome/app/theme/chromium chrome/app/theme/default_100_percent chrome/app/theme/default_200_percent
          cp -r ../linux/chrome .
          pwd && ls -lsh chrome/app/theme/chromium
          sudo build/install-build-deps.sh
          pwd && ls -lsh

      - name: Build chrome/browser/ui
        shell: bash
        continue-on-error: true
        run: |
          cd $SRCDIR/chromium-$VERSION
          timeout 5h ninja -j 4 -C out/release chrome/browser/ui

      - name: Compress artifacts
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ZSTD_CLEVEL=12 tar -I zstd -cvpf /home/runner/work/gollum/gollum/chromium-src/out.tar.zst ./out

      - name: Upload out directory
        uses: actions/upload-artifact@v4
        with:
          name: chromium-out-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src/out.tar.zst
          overwrite: true

  linuxbuild4:
      needs: linuxbuild3
      runs-on: ubuntu-latest
      env:
        VMAJOR: 135
        VERSION: 135.0.7049.52
        SRCDIR: chromium-src
      steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Reclaiming disk space on / by disabling swap partition
        run: |
          sudo swapoff -av
          sudo rm -f /swapfile

      - name: "remove not needed items"
        run: |
          sudo rm -rf /usr/local/.ghcup \
            /usr/share/dotnet \
            /usr/share/swift \
            /usr/local/share/powershell \
            /usr/local/lib/android \
            /opt/ghc \
            /opt/hostedtoolcache/CodeQL \
            /imagegeneration \
            "$AGENT_TOOLSDIRECTORY"
          sudo docker image prune --all --force
          sudo docker builder prune -a

      - name: Download source tarball
        uses: actions/download-artifact@v4
        with:
          name: linux-src-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src

      - name: Download out directory
        uses: actions/download-artifact@v4
        with:
          name: chromium-out-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src

      - name: Download versioned branding patches
        uses: actions/download-artifact@v4
        with:
          name: linux-patch-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src

      - uses: actions/checkout@v4
        with:
          repository: 'COD3HUNT3R/desktop'
          path: 'chromium-src/desktop'
          token: ${{ secrets.PAT }}

      - name: Clone depot_tools
        shell: bash
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: |
          cd $SRCDIR
          echo "Clone depot_tools..."
          git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools
          echo "::add-path::$GITHUB_WORKSPACE/chromium-src/depot_tools"
          sudo apt install -y ninja-build gperf

      - name: Extract tar
        shell: bash
        run: |
          cd $SRCDIR && ls -lsh
          tar -xf chromium-$VERSION.tar.xz
          tar -xf out.tar.zst
          ls -lsh
          rm -f chromium-$VERSION.tar.xz out.tar.zst
          mv out chromium-$VERSION && cd chromium-$VERSION
          patch -p1 < ../baraqah$VMAJOR-$VERSION-branding.patch
          rm -rf chrome/app/theme/chromium chrome/app/theme/default_100_percent chrome/app/theme/default_200_percent
          cp -r ../linux/chrome .
          pwd && ls -lsh chrome/app/theme/chromium
          sudo build/install-build-deps.sh
          pwd && ls -lsh

      - name: Build chrome/browser/ui
        shell: bash
        continue-on-error: true
        run: |
          cd $SRCDIR/chromium-$VERSION
          timeout 5h ninja -j 4 -C out/release chrome/browser/ui

      - name: Build chrome/browser
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ninja -j 4 -C out/release chrome/browser

      - name: Compress artifacts
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ZSTD_CLEVEL=12 tar -I zstd -cvpf /home/runner/work/gollum/gollum/chromium-src/out.tar.zst ./out

      - name: Upload out directory
        uses: actions/upload-artifact@v4
        with:
          name: chromium-out-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src/out.tar.zst
          overwrite: true

  linuxbuild5:
      needs: linuxbuild4
      runs-on: ubuntu-latest
      env:
        VMAJOR: 135
        VERSION: 135.0.7049.52
        SRCDIR: chromium-src
      steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Reclaiming disk space on / by disabling swap partition
        run: |
          sudo swapoff -av
          sudo rm -f /swapfile

      - name: "remove not needed items"
        run: |
          sudo rm -rf /usr/local/.ghcup \
            /usr/share/dotnet \
            /usr/share/swift \
            /usr/local/share/powershell \
            /usr/local/lib/android \
            /opt/ghc \
            /opt/hostedtoolcache/CodeQL \
            /imagegeneration \
            "$AGENT_TOOLSDIRECTORY"
          sudo docker image prune --all --force
          sudo docker builder prune -a

      - name: Download source tarball
        uses: actions/download-artifact@v4
        with:
          name: linux-src-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src

      - name: Download out directory
        uses: actions/download-artifact@v4
        with:
          name: chromium-out-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src

      - name: Download versioned branding patches
        uses: actions/download-artifact@v4
        with:
          name: linux-patch-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src

      - uses: actions/checkout@v4
        with:
          repository: 'COD3HUNT3R/desktop'
          path: 'chromium-src/desktop'
          token: ${{ secrets.PAT }}

      - name: Clone depot_tools
        shell: bash
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: |
          cd $SRCDIR
          echo "Clone depot_tools..."
          git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools
          echo "::add-path::$GITHUB_WORKSPACE/chromium-src/depot_tools"
          sudo apt install -y ninja-build gperf devscripts

      - name: Extract tar
        shell: bash
        run: |
          cd $SRCDIR && ls -lsh
          tar -xf chromium-$VERSION.tar.xz
          tar -xf out.tar.zst
          ls -lsh
          rm -f chromium-$VERSION.tar.xz out.tar.zst
          mv out chromium-$VERSION && cd chromium-$VERSION
          patch -p1 < ../baraqah$VMAJOR-$VERSION-branding.patch
          rm -rf chrome/app/theme/chromium chrome/app/theme/default_100_percent chrome/app/theme/default_200_percent
          cp -r ../linux/chrome .
          pwd && ls -lsh chrome/app/theme/chromium
          sudo build/install-build-deps.sh
          pwd && ls -lsh

      - name: Build chrome
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ninja -j 4 -C out/release chrome

      - name: Build chrome_sandbox
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ninja -j 4 -C out/release chrome_sandbox

      - name: Build chromedriver
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ninja -j 4 -C out/release chromedriver

      - name: Build installer
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ninja -j 4 -C out/release installer
          ls -lsh out/release

      - name: Upload DEB packages
        uses: actions/upload-artifact@v4
        with:
          name: packages-linux-deb-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src/chromium-${{ env.VERSION }}/out/release/*.deb

      - name: Upload RPM packages
        uses: actions/upload-artifact@v4
        with:
          name: packages-linux-rpm-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src/chromium-${{ env.VERSION }}/out/release/*.rpm

      - name: Compress artifacts
        shell: bash
        run: |
          cd $SRCDIR/chromium-$VERSION
          ZSTD_CLEVEL=12 tar -I zstd -cvpf /home/runner/work/gollum/gollum/chromium-src/out.tar.zst ./out

      - name: Upload out directory
        uses: actions/upload-artifact@v4
        with:
          name: chromium-out-${{ env.VERSION }}
          path: /home/runner/work/gollum/gollum/chromium-src/out.tar.zst
          overwrite: true
